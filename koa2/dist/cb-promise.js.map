{"version":3,"sources":["../src/cb-promise.js"],"names":["fs","require","util","promisify","readFile","then","JSON","parse","console","log","data","name","catch","err"],"mappings":";;AAAA,IAAMA,KAAGC,QAAQ,IAAR,CAAT;AACA,IAAMC,OAAKD,QAAQ,MAAR,CAAX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,KAAKC,SAAL,CAAeH,GAAGI,QAAlB,EAA4B,gBAA5B,EACKC,IADL,CACUC,KAAKC,KADf,EAEKF,IAFL,CAEU,gBAAM;AACRG,YAAQC,GAAR,CAAYC,KAAKC,IAAjB;AACH,CAJL,EAKKC,KALL,CAKW,eAAK;AACRJ,YAAQC,GAAR,CAAYI,GAAZ;AACH,CAPL","file":"cb-promise.js","sourcesContent":["const fs=require('fs');\r\nconst util=require('util')\r\n// fs.readFile('./package.json',(err,data)=>{\r\n//     if(err) return console.log(err)\r\n//     data=JSON.parse(data)\r\n//     console.log(data)\r\n// })\r\n\r\n// function readFileAsync(path) { \r\n//     return new Promise((resolve,reject)=>{\r\n//         fs.readFile(path,(err,data)=>{\r\n//             if(err) reject(err)\r\n//             else resolve(data)\r\n            \r\n//         })\r\n//     })\r\n//  }\r\n//  readFileAsync('./package.json')\r\n//     .then(data=>{\r\n//         data=JSON.parse(data)\r\n//         console.log(data.name)\r\n//     })\r\n//     .catch(err=>{\r\n//         console.log(err)\r\n//     })\r\nutil.promisify(fs.readFile)('./package.json')\r\n    .then(JSON.parse)\r\n    .then(data=>{\r\n        console.log(data.name)\r\n    })\r\n    .catch(err=>{\r\n        console.log(err)\r\n    })"]}