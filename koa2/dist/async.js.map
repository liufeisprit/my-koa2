{"version":3,"sources":["../src/async.js"],"names":["readAsync","data","JSON","parse","console","log","init","fs","require","util","co","readFile","cb","readFiles","err","readFileAsync","path","Promise","resolve","reject","then","catch","promisify"],"mappings":";;;;;;;0EA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACmBA,UAAU,gBAAV,CADnB;;AAAA;AACQC,4BADR;;AAEIA,+BAAKC,KAAKC,KAAL,CAAWF,IAAX,CAAL;AACAG,gCAAQC,GAAR,CAAY,OAAZ;AACA;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,I;;;;;;;;;AA7Cf,IAAMC,KAAGC,QAAQ,IAAR,CAAT;AACA,IAAMC,OAAKD,QAAQ,MAAR,CAAX;AACA,IAAME,KAAGF,QAAQ,IAAR,CAAT;AACA,SAASG,QAAT,CAAkBC,EAAlB,EAAsB;AAClBL,OAAGM,SAAH,CAAa,gBAAb,EAA8B,UAACC,GAAD,EAAKb,IAAL,EAAY;AACtC,YAAGa,GAAH,EAAQ,OAAOF,GAAGE,GAAH,CAAP;AACRF,cAAIA,GAAG,IAAH,EAAQX,IAAR,CAAJ;AACH,KAHD;AAIH;AACD;AACAU,SAAS,UAACG,GAAD,EAAKb,IAAL,EAAY;AACjB,QAAG,CAACa,GAAJ,EAAQ;AACJb,eAAKC,KAAKC,KAAL,CAAWF,IAAX,CAAL;AACAG,gBAAQC,GAAR,CAAY,UAAZ;AACA;AACH;AACJ,CAND;AAOA;AACA,SAASU,aAAT,CAAuBC,IAAvB,EAA6B;AACzB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACjCZ,WAAGI,QAAH,CAAYK,IAAZ,EAAiB,UAACF,GAAD,EAAKb,IAAL,EAAY;AACzB,gBAAGa,GAAH,EAAQK,OAAOL,GAAP,EAAR,KACKI,QAAQjB,IAAR;AAER,SAJD;AAKH,KANM,CAAP;AAOF;AACDc,cAAc,gBAAd,EACIK,IADJ,CACS,gBAAM;AACRnB,WAAKC,KAAKC,KAAL,CAAWF,IAAX,CAAL;AACA;AACAG,YAAQC,GAAR,CAAY,SAAZ;AACH,CALJ,EAMIgB,KANJ,CAMU,eAAK;AACRjB,YAAQC,GAAR,CAAYS,GAAZ;AACH,CARJ;AASD;AACAJ,4CAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACgBD,KAAKa,SAAL,CAAef,GAAGI,QAAlB,EAA4B,gBAA5B,CADhB;;AAAA;AACKV,wBADL;;AAECA,2BAAKC,KAAKC,KAAL,CAAWF,IAAX,CAAL;AACA;AACAG,4BAAQC,GAAR,CAAY,IAAZ;;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAH;AAMA;AACA,IAAML,YAAYS,KAAKa,SAAL,CAAef,GAAGI,QAAlB,CAAlB;;AAOAL","file":"async.js","sourcesContent":["const fs=require('fs');\r\nconst util=require('util')\r\nconst co=require('co')\r\nfunction readFile(cb) {\r\n    fs.readFiles('./package.json',(err,data)=>{\r\n        if(err) return cb(err)\r\n        cb&&cb(null,data)\r\n    })\r\n}\r\n//回调函数实现异步\r\nreadFile((err,data)=>{\r\n    if(!err){\r\n        data=JSON.parse(data)\r\n        console.log('callback')\r\n        // console.log(data)\r\n    }\r\n})\r\n//promise\r\nfunction readFileAsync(path) { \r\n    return new Promise((resolve,reject)=>{\r\n        fs.readFile(path,(err,data)=>{\r\n            if(err) reject(err)\r\n            else resolve(data)\r\n            \r\n        })\r\n    })\r\n }\r\n readFileAsync('./package.json')\r\n    .then(data=>{\r\n        data=JSON.parse(data)\r\n        // console.log(data.name)\r\n        console.log('Promise')\r\n    })\r\n    .catch(err=>{\r\n        console.log(err)\r\n    })\r\n//第三阶段 generator co\r\nco(function *() {\r\n    let data=yield util.promisify(fs.readFile)('./package.json');\r\n    data=JSON.parse(data)\r\n    // console.log(data)\r\n    console.log('co')\r\n})\r\n//第四阶段 async \r\nconst readAsync = util.promisify(fs.readFile)\r\nasync function init() {\r\n    let data=await readAsync('./package.json')\r\n    data=JSON.parse(data)\r\n    console.log('async')\r\n    // console.log(data)\r\n}\r\ninit()"]}